---
- name: bootstrap a centos7 server
  hosts: all
  become: yes
  become_user: root
  vars_files:
    - group_vars/all.yml
    - group_vars/vault.yml

  tasks:
    # user management
    - name: user | set root password
      user: name=root password={{ ROOT_PASSWORD | password_hash('sha512') }} 

    - name: user | create admin user in the wheel group
      user: name={{ ADMIN_USERNAME }} password={{ ADMIN_PASSWORD | password_hash('sha512') }} shell=/bin/bash groups=users,wheel

    - name: user | allow wheel group to have passwordless sudo
      lineinfile: dest=/etc/sudoers regexp="^%wheel" line="%wheel ALL=(ALL) NOPASSWD{{ ":" }} ALL" state=present

    - name: user | add authorized_keys for the admin
      authorized_key: user={{ ADMIN_USERNAME }} key={{ item }} state=present
      with_items: "{{ ADMIN_PUBLIC_KEYS }}"

    # ssh configuration
    - name: ssh | disallow password authentication
      lineinfile: dest=/etc/ssh/sshd_config regexp="^PasswordAuthentication" line="PasswordAuthentication no" state=present
      notify: restart ssh

    - name: ssh | disallow root SSH access
      lineinfile: dest=/etc/ssh/sshd_config regexp="^PermitRootLogin" line="PermitRootLogin no" state=present
      notify: restart ssh

    - name: ssh | disable print motd to enable custom motd
      lineinfile: dest=/etc/ssh/sshd_config regexp="^PrintMotd" line="PrintMotd no" insertafter="^#PrintMotd" state=present
      notify: restart ssh

    - name: ssh | enable ssh banner
      lineinfile: dest=/etc/ssh/sshd_config regexp="^Banner" line="Banner /etc/issue.net" insertafter="^#Banner" state=present
      notify: restart ssh

    # basic package management
    - name: packages | upgrade packages to the latest version
      yum: name=* state=latest update_cache=yes

    - name: packages | install required packages
      yum: name={{ item }} state=latest 
      with_items: "{{ DEFAULT_PACKAGES }}"

    # banner and motd
    - name: motd | install custom issue.net
      copy: src=issue.net dest=/etc/issue.net owner=root group=root mode=0644

    - name: motd | install custom figlet font for motd
      copy: src=basic.flf dest=/usr/share/figlet/basic.flf owner=root group=root mode=0644

    - name: motd | install custom motd
      copy: src=motd.sh dest=/etc/profile.d/motd.sh owner=root group=root mode=0644

    # fail2ban
    - name: fail2ban | install default fail2ban configuration
      copy: src=jail.local dest=/etc/fail2ban/jail.local owner=root group=root mode=0644
      notify: restart fail2ban

    # basic firewall
    - name: firewall | start and enable firewalld
      systemd: name=firewalld state=started enabled=yes

    - name: firewall | set the dmz zone as defaultk
      command: firewall-cmd --set-default-zone=dmz

    - name: firewall | put the nic interface in the dmz zone (only ssh and icmp inbound allowed)
      command: firewall-cmd --zone=dmz --add-interface={{ item }}
      with_items: "{{ DMZ_INTERFACES }}"
      notify: reload firewalld

    # basic mail configuration, postfix send only for notification
    - name: mail | configure myhostname for postfix
      lineinfile: dest=/etc/postfix/main.cf regexp="^myhostname = " line="myhostname = {{ ansible_fqdn }}" insertafter="^#myhostname" state=present
      notify: restart postfix

    - name: mail | configure mydomain for postfix
      lineinfile: dest=/etc/postfix/main.cf regexp="^mydomain = " line="mydomain = {{ ansible_fqdn.split('.', 1)[1] }}" insertafter="^#mydomain" state=present
      notify: restart postfix

    - name: mail | setup root aliases
      lineinfile: dest=/etc/aliases regexp="^root:" line="root{{ ":" }} {{ ROOT_ALIAS }}" insertafter="^#root" state=present
      notify: newaliases

    - name: mail | configure mailx endpoint
      lineinfile: dest=/etc/ssmtp/ssmtp.conf regexp="^mailhub" line="mailhub=localhost" state=present

    # configure daily auto updates by yum-cron
    - name: yum-cron-daily | only security updates
      lineinfile: dest=/etc/yum/yum-cron.conf regexp="^update_cmd" line="update_cmd = security" state=present
      notify: restart yum-cron

    - name: yum-cron-daily | apply updates
      lineinfile: dest=/etc/yum/yum-cron.conf regexp="^apply_updates" line="apply_updates = yes" state=present
      notify: restart yum-cron

    - name: yum-cron-daily | mail notifications
      lineinfile: dest=/etc/yum/yum-cron.conf regexp="^emit_via" line="emit_via = email" state=present
      notify: restart yum-cron

    - name: yum-cron-daily | ignore updates for
      lineinfile: dest=/etc/yum/yum-cron.conf line="exclude = {{ AUTO_UPDATES_IGNORE }}" state=present
      when: AUTO_UPDATES_IGNORE is defined
      notify: restart yum-cron

  handlers:
    - name: restart ssh
      systemd: name=sshd state=restarted enabled=yes

    - name: restart fail2ban
      systemd: name=fail2ban state=restarted enabled=yes

    - name: reload firewalld
      command: firewall-cmd --reload

    - name: restart postfix
      systemd: name=postfix state=restarted enabled=yes

    - name: newaliases
      command: newaliases

    - name: restart yum-cron
      systemd: name=yum-cron state=restarted enabled=yes

